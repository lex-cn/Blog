#
#~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

function say {
    mpv http://dict.youdao.com/dictvoice?audio=${1}'&'type=1 > /dev/null
    }
alias say='say $1'

PATH=$PATH:/opt/bnc/

#[ -n "$XTERM_VERSION" ] && transset --id "$WINDOWID" 0.7 >/dev/null

alias   q="exit"
alias   c="clear"
#alias   ls="ls -h --color --time-style '+%Y/%m/%d %H:%M:%S'"
alias commit="git commit -a -m "
alias push="git push origin master"
alias   up="sudo apt-get update && sudo apt-get dist-upgrade && sudo apt-get autoremove "
alias   rm="rm -i"
alias lunar="lunar -u"
alias rdesktop="rdesktop -g 1920x1040"
alias vncviewer="vncviewer -geometry 1920x1040"
alias   clean="rm -rf *.aux *.out *.toc *.synctex.gz *.log"
alias  keyon="xinput set-prop 14 \"Device Enabled\" 1"
alias keyoff="xinput set-prop 14 \"Device Enabled\" 0"
alias  padon="xinput set-prop 15 \"Device Enabled\" 1"
alias padoff="xinput set-prop 15 \"Device Enabled\" 0"
alias vnc='/opt/VNC &'
alias zotero='nohup /opt/zotero/zotero >/dev/null 2>&1 &'
alias padoff='synclient TouchpadOff=1'
alias cpr='rsync -rltgoDh --info=progress2'
alias mv='rsync -a  --info=progress2 --remove-source-files'
alias cp='cp -rv '
#alias rm='trash'
alias cgrep='grep -Rn --color'
alias grep='grep --color'
alias md2a4report=" pandoc -s --pdf-engine=xelatex --highlight-style=tango -F pandoc-citeproc --dpi=300 -V CJKmainfont='WenQuanYi Micro Hei' -V fontsize=11pt -V documentclass=scrreprt -V papersize=a4"
alias md2b5report=" pandoc -s --pdf-engine=xelatex --highlight-style=tango -F pandoc-citeproc --dpi=300 -V CJKmainfont='WenQuanYi Micro Hei' -V fontsize=11pt -V documentclass=scrreprt -V papersize=b5"
alias md2a5report=" pandoc -s --pdf-engine=xelatex --highlight-style=tango -F pandoc-citeproc --dpi=300 -V CJKmainfont='WenQuanYi Micro Hei' -V fontsize=11pt -V documentclass=scrreprt -V papersize=a5"
alias pip3up="pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs pip3 install -U"
alias dos2unixall="find . -type f -exec dos2unix {} \;"
alias unix2dosall="find . -type f -exec unix2dos {} \;"
alias ctags='~/Projects/bins/bin/universal-ctags'

cd() { builtin cd "$@" && ls -l; }
alias du='du -h --max-depth=1'

# Install Ruby Gems to ~/gems' >> ~/.bashrc
export GEM_HOME="$HOME/gems"
export PATH="$HOME/gems/bin:$PATH"


function git_branch {
    ref=$(git symbolic-ref HEAD 2> /dev/null) || return;
    echo "("${ref#refs/heads/}") ";
}

PS1="\[\033[1;32m\]${debian_chroot:+($debian_chroot)}\u@\h:\w"
PS1+="\[\033[1;36m\]\$(git_branch)"
PS1+="\[\033[1;32m\]$ \[\e[0m\]"

PATH=$PATH:/opt/bin/:~/.local/bin/:~/Projects/bins/bin/ctags

#set -o vi
#. /usr/share/autojump/autojump.sh

